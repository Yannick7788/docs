import{_ as c,c as a,l as e,a as l,I as t,w as s,aV as o,D as i,o as d}from"./chunks/framework.BDfjdzks.js";const C=JSON.parse('{"title":"window视图","description":"","frontmatter":{},"headers":[],"relativePath":"javaScript/sizePosition/window视图.md","filePath":"javaScript/sizePosition/window视图.md","lastUpdated":1719236634000}'),g={name:"javaScript/sizePosition/window视图.md"},_=o('<h1 id="window视图" tabindex="-1">window视图 <a class="header-anchor" href="#window视图" aria-label="Permalink to &quot;window视图&quot;">​</a></h1><h2 id="_1-innerwidth、innerheight" tabindex="-1">1. innerWidth、innerHeight <a class="header-anchor" href="#_1-innerwidth、innerheight" aria-label="Permalink to &quot;1. innerWidth、innerHeight&quot;">​</a></h2><blockquote><p><b style="color:red;">window.innerWidth</b> 返回以像素为单位的窗口的内部<strong>宽度</strong>。如果垂直滚动条存在，则这个属性将包括它的宽度。</p></blockquote><hr><blockquote><p><b style="color:red;">window.innerHeight</b> 返回以像素为单位的窗口的内部<strong>高度</strong>。如果垂直滚动条存在，则这个属性将包括它的宽度。</p><div class="tip custom-block"><p class="custom-block-title">提示</p></div></blockquote>',5),p=e("li",null,[e("strong",null,"只读属性")],-1),u=e("li",null,"宽度包含滚动条宽度(如果存在)",-1),h=e("strong",null,"不带",-1),b=o('<h2 id="_2-outerwidth-、outerheight" tabindex="-1">2.outerWidth 、outerHeight <a class="header-anchor" href="#_2-outerwidth-、outerheight" aria-label="Permalink to &quot;2.outerWidth 、outerHeight&quot;">​</a></h2><blockquote><p><b style="color:red;">window.outerWidth 和 window.outerHeight</b> 表示整个浏览器的宽高（以像素为单位），包括侧边栏（如果存在）、窗口镶边（Window Chrome）和窗口调正边框，包含调试窗及浏览器边框。</p></blockquote><hr><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li><strong>只读属性</strong></li><li>宽度包含滚动条宽度(如果存在)</li><li>返回值<strong>不带</strong>单位(值是以px为单位时的纯数字)</li></ul></div>',4),w=o('<h2 id="_3-screenleft、screentop、screenx、screeny" tabindex="-1">3. screenLeft、screenTop、screenX、screenY <a class="header-anchor" href="#_3-screenleft、screentop、screenx、screeny" aria-label="Permalink to &quot;3. screenLeft、screenTop、screenX、screenY&quot;">​</a></h2><blockquote><p><b style="color:red;">Window.screenLeft</b> 是一个只读属性，它返回浏览器左边框到左边屏幕边缘的 CSS 像素数。</p></blockquote><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li><strong>只读属性</strong></li><li>返回值<strong>不带</strong>单位(值是以px为单位时的纯数字)</li></ul></div><hr><blockquote><p><b style="color:red;">Window.screenTop</b>只读属性返回垂直距离，单位是 CSS 像素，从用户浏览器的上边界到屏幕最顶端。</p></blockquote><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li><strong>只读属性</strong></li><li>返回值<strong>不带</strong>单位(值是以px为单位时的纯数字)</li></ul></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>**备注：** screenLeft 和 screenTop 只是 Window.screenX,window.screenY 属性的别名，最初只被 IE 浏览器所支持。现在主流的浏览器都已支持该属性,他们的表现一样</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',7),x=o('<h2 id="_4-scrollx、scrolly、pagexoffset、pageyoffset" tabindex="-1">4. scrollX、scrollY、pageXOffset、pageYOffset <a class="header-anchor" href="#_4-scrollx、scrolly、pagexoffset、pageyoffset" aria-label="Permalink to &quot;4. scrollX、scrollY、pageXOffset、pageYOffset&quot;">​</a></h2><blockquote><p><b style="color:red;">Window.scrollX</b> 返回文档/页面水平方向滚动的像素值。</p></blockquote><blockquote><p><b style="color:red;">Window.scrollY</b> 返回文档在垂直方向已滚动的像素值。</p></blockquote><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li>都是<strong>只读属性</strong></li><li>都是<strong>像素数</strong></li><li>返回值有小数(可能会有很长的小数...)</li></ul></div>',4),f=o('<h2 id="_5-总结" tabindex="-1">5. 总结 <a class="header-anchor" href="#_5-总结" aria-label="Permalink to &quot;5. 总结&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">属性</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>innerWidth</strong></td><td style="text-align:center;">浏览器可视窗口内层宽度</td></tr><tr><td style="text-align:center;"><strong>innerHeight</strong></td><td style="text-align:center;">浏览器可视窗口内层高度</td></tr><tr><td style="text-align:center;"><strong>outerWidth</strong></td><td style="text-align:center;">浏览器网页视口外层宽度</td></tr><tr><td style="text-align:center;"><strong>outerHeight</strong></td><td style="text-align:center;">浏览器网页视口外层高度</td></tr><tr><td style="text-align:center;"><strong>screenLeft</strong></td><td style="text-align:center;">浏览器距屏幕左边距</td></tr><tr><td style="text-align:center;"><strong>screenTop</strong></td><td style="text-align:center;">浏览器距屏幕上边距</td></tr><tr><td style="text-align:center;"><strong>scrollX</strong></td><td style="text-align:center;">当前页面卷去的水平距离</td></tr><tr><td style="text-align:center;"><strong>scrollY</strong></td><td style="text-align:center;">当前页面卷去的垂直距离</td></tr><tr><td style="text-align:center;"><strong>pageXOffset</strong></td><td style="text-align:center;">同<code>scrollX</code></td></tr><tr><td style="text-align:center;"><strong>pageYOffset</strong></td><td style="text-align:center;">同<code>scrollY</code></td></tr><tr><td style="text-align:center;"><strong>screenX</strong></td><td style="text-align:center;">同<code>screenLeft</code></td></tr><tr><td style="text-align:center;"><strong>screenY</strong></td><td style="text-align:center;">同<code>screenTop</code></td></tr></tbody></table>',2);function m(y,k,T,v,S,q){const r=i("a-image"),n=i("DemoBlock");return d(),a("div",null,[_,e("ul",null,[p,u,e("li",null,[l("返回值"),h,l("单位(值是以px为单位的纯数字) ::: "),t(n,null,{default:s(()=>[t(r,{preview:!0,src:"/docs/images/javaScript/window-inner.png"})]),_:1})])]),b,t(n,null,{default:s(()=>[t(r,{preview:!0,src:"/docs/images/javaScript/window-outer.png"})]),_:1}),w,t(n,null,{default:s(()=>[t(r,{preview:!0,src:"/docs/images/javaScript/window-screen.png"})]),_:1}),x,t(n,null,{default:s(()=>[t(r,{preview:!0,src:"/docs/images/javaScript/window-scroll.png"})]),_:1}),f])}const A=c(g,[["render",m]]);export{C as __pageData,A as default};
