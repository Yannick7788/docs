import{_ as s,c as i,o as a,aV as n}from"./chunks/framework.MiujXLIZ.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"git/gitignore忽略文件不生效.md","filePath":"git/gitignore忽略文件不生效.md","lastUpdated":1719325183000}'),e={name:"git/gitignore忽略文件不生效.md"},t=n(`<h2 id="gitignore文件不生效原因" tabindex="-1">.gitignore文件不生效原因 <a class="header-anchor" href="#gitignore文件不生效原因" aria-label="Permalink to &quot;.gitignore文件不生效原因&quot;">​</a></h2><blockquote><p>在开发过程中，我们会在 .gitignore 文件中添加一些忽略项，然而当我们push到远程的时候会出现一个问题,那就是我们在 .gitignore 添加的文件仍然push到了远程。</p></blockquote><h2 id="错误原因" tabindex="-1"><strong>错误原因</strong>: <a class="header-anchor" href="#错误原因" aria-label="Permalink to &quot;**错误原因**:&quot;">​</a></h2><p>我们首次将项目push到远程的时候,没有创建 .gitignore 文件。之后我们想创建 .gitignore 文件并添加忽略项时,发现并不会起作用. 这是因为在项目第一次push 之前已经将项目的所有文件在本地进行了缓存(commit)或者说是所有的项目已经被跟踪(track)纳入版本管理中。所以我们再添加忽略项的时候没有作用</p><h2 id="解决办法" tabindex="-1"><strong>解决办法：</strong> <a class="header-anchor" href="#解决办法" aria-label="Permalink to &quot;**解决办法：**&quot;">​</a></h2><h3 id="_1-清除所有的本地缓存" tabindex="-1">1. 清除所有的本地缓存 <a class="header-anchor" href="#_1-清除所有的本地缓存" aria-label="Permalink to &quot;1. 清除所有的本地缓存&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    1.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --cached</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    2.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    3.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;update .gitignore&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    4.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 远程分支名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_2-清除不需要跟踪的文件-不想要再远程仓库出现的文件" tabindex="-1">2. 清除不需要跟踪的文件(不想要再远程仓库出现的文件) <a class="header-anchor" href="#_2-清除不需要跟踪的文件-不想要再远程仓库出现的文件" aria-label="Permalink to &quot;2. 清除不需要跟踪的文件(不想要再远程仓库出现的文件)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">   1.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --cached</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">fileName</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">不需要跟踪的文件名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">   2.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">   3.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;update .gitignore&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">   4.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 远程分支名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,9),l=[t];function p(h,r,k,d,g,o){return a(),i("div",null,l)}const F=s(e,[["render",p]]);export{u as __pageData,F as default};
